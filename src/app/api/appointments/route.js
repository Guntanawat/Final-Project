import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export async function GET() {
  try {
    const appointments = await prisma.appointments.findMany({
      include: {
        employee: true, // Include the employee data associated with each appointment
      },
    });
    return Response.json(appointments);
  } catch (error) {
    console.error("Error fetching appointments:", error);
    return Response.json(
      { error: "Error fetching appointments" },
      { status: 500 }
    );
  }
}

export async function POST(request) {
  try {
    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏ú‡πà‡∏≤‡∏ô request body
    const body = await request.json();
    console.log("üöÄ ~ POST ~ body:", body);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (
      !body.name ||
      !body.position ||
      !body.phone_number ||
      !body.email
      // !body.password
    ) {
      return new Response(
        JSON.stringify({ message: "Missing required fields" }),
        { status: 400 }
      );
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á employee ‡πÉ‡∏´‡∏°‡πà
    const newAppointments = await prisma.appointments.create({
      data: {
        name: body.name,
        phone_number: body.phone_number,
        employee_id: body.position,
        appointment_time: new Date(body.date_time),
        status: "pending",
        // password: body.password, // ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      },
    });

    // name: "John Doe",
    //     phone_number: "0123456789",
    //     employee_id: alice.id, // Use Alice's ID
    //     appointment_time: new Date("2024-08-15T10:00:00Z"),
    //     status: "pending",
    //     created_at: new Date(),
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• employee ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    return new Response(
      JSON.stringify({
        message: "Employee created successfully",
        newAppointments,
      }),
      { status: 201 }
    );
  } catch (error) {
    console.error("Error creating employee:", error);

    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    return new Response(JSON.stringify({ error: "Error creating employee" }), {
      status: 500,
    });
  }
}
